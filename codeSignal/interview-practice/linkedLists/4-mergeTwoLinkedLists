// Singly-linked lists are already defined with this interface:
// template<typename T>
// struct ListNode {
//   ListNode(const T &v) : value(v), next(nullptr) {}
//   T value;
//   ListNode *next;
// };
//
ListNode<int> * mergeTwoLinkedLists(ListNode<int> * l1, ListNode<int> * l2) {
    if (!l1) return l2;
    if (!l2) return l1;
    ListNode<int> *big, *small, *tmp, *start;
    if (l1->value > l2->value) {
        big = l1;
        small = start = l2;
    }
    else {
        big = l2;
        small = start = l1;
    }

    while (big and small->next) {
        if (small->next->value < big->value) small = small->next;
        else {
            tmp = big;
            big = big->next;
            tmp->next = small->next;
            small->next = tmp;
        }
    }

    if (small->next == NULL) small->next = big;
    return start;
}
